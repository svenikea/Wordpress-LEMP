name: Github-Action
on:
  push:
    paths-ignore:
      - '**.md'
    branches:
      - main

jobs:
  build:
    outputs:
      build_status: ${{ steps.final.outputs.joboutput }}
      job_name: ${{ steps.final.outputs.jobname }}
    name: Run Distribution Test
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        distribution: ["centos:7", "centos:8", "ubuntu:bionic", "ubuntu:xenial", "debian:jessie", "debian:stretch", "archlinux:latest"]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2
        
    - name: Check if README.md is changed
      id: readme_is_changed
      shell: pwsh
      run: |
        # Diff HEAD with the previous commit
        $diff = git diff --name-only HEAD^ HEAD

        # Check if a file under docs/ or with the .md extension has changed (added, modified, deleted)
        $SourceDiff = $diff | Where-Object { $_ -match 'README.MD' }
        $HasDiff = $SourceDiff.Length -gt 0

        # Set the output named "readme_changed"
        Write-Host "::set-output name=readme_changed::$HasDiff"
        
    - name: Building Linux Environment
      run: |
        chmod +x daemon-config.sh
        ./daemon-config.sh
        docker pull ${{ matrix.distribution }}
        docker build . --tag=${{ matrix.distribution }} --file=./docker/Dockerfile.${{ matrix.distribution }} --no-cache --rm 
      shell: bash

    - name: Running Script on Linux Environment
      run: |
        container_id=$(mktemp)
        docker run --tty --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro -v ${PWD}:/Wordpress-LEMP:rw ${{ matrix.distribution }} > "${container_id}"
        docker exec "$(cat ${container_id})" env TERM=xterm bash startup.sh
        docker rm -f "$(cat ${container_id})"
      shell: bash
    
    - name: Output Readme changed
      if: steps.readme_is_changed.outputs.readme_changed == 'True'
      run: echo "README has changed"
    
    - name: Get Job output
      if: always()
      id: final
      run: |
        echo "::set-output name=joboutput::${{ job.status }}"
        echo "::set-output name=jobname::${{ github.job }}"
    
  slack:
    name: Send Result to Slack
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: build
    steps:
      - name: Post to a Slack channel
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: commit,repo,ref,author,eventName,message,workflow
          custom_payload: |
            {
                text: '${{ needs.build.outputs.build_status }}' === 'success' ? ':white_check_mark: <!channel> ${{ github.workflow }}' : ':poop:  <!channel> ${{ github.workflow }}',
                attachments: [
                    {
                        color: '${{ needs.build.outputs.build_status }}' === 'success' ? '#009900' : '${{ needs.build.outputs.build_status }}' === 'failure' ? '#E45959' : '#dfb317',
                        blocks: [
                            {
                                type: "section",
                                fields: [
                                  {
                                    type: "mrkdwn",
                                    text: `*Repository*\n${{ github.repository }}`
                                  },
                                  {
                                    type: "mrkdwn",
                                    text: `*Git Branch*\n${{ github.ref_name }}`
                                  }
                                ]
                            },
                            {
                                type: "section",
                                fields: [
                                    {
                                        type: "mrkdwn",
                                        text: `*Commit*\n${process.env.AS_COMMIT}`
                                    },
                                    {
                                        type: "mrkdwn",
                                        text: `*Message*\n${{ github.event.head_commit.message }}`
                                    }
                                ]
                            },
                            {
                                type: "section",
                                fields: [
                                    {
                                        type: "mrkdwn",
                                        text: `*Job*\n${{ needs.build.outputs.job_name }}`
                                    },
                                    {
                                        type: "mrkdwn",
                                        text: `*Status*\n${{ needs.build.outputs.build_status }}`
                                    }
                                ]
                            }
                        ]
                    }
                ]
                }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.WORKFLOW_BOT_WEBHOOK_URL }}




